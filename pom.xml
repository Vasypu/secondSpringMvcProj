<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>secondSpringMvcProj</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>secondSpringMvcProj Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <spring.version>5.3.1</spring.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>6.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5 -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring5</artifactId>
      <version>3.0.11.RELEASE</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>6.1.6.Final</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.18</version>
    </dependency>


    <!--    <dependency>-->
<!--      <groupId>javax.el</groupId>-->
<!--      <artifactId>javax.el-api</artifactId>-->
<!--      <version>3.0.0</version>-->
<!--    </dependency>-->



    <!--    &lt;!&ndash; https://mvnrepository.com/artifact/org.glassfish.main.bean-validator/bean-validator &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.main.bean-validator</groupId>-->
<!--      <artifactId>bean-validator</artifactId>-->
<!--      <version>5.1.0</version>-->
<!--    </dependency>-->

    <!-- https://mvnrepository.com/artifact/javax.validation/validation-api -->
<!--    <dependency>-->
<!--      <groupId>javax.validation</groupId>-->
<!--      <artifactId>validation-api</artifactId>-->
<!--      <version>2.0.0.Final</version>-->
<!--    </dependency>-->

<!--    <dependency>-->
<!--      <groupId>commons-validator</groupId>-->
<!--      <artifactId>commons-validator</artifactId>-->
<!--      <version>1.7</version>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.springframework.boot</groupId>-->
<!--      <artifactId>spring-boot-starter-validation</artifactId>-->
<!--      <version>2.4.1</version>-->
<!--    </dependency>-->




  </dependencies>

<!--  <build>-->
<!--    <finalName>secondSpringMvcProj</finalName>-->
<!--    <pluginManagement>&lt;!&ndash; lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) &ndash;&gt;-->
<!--      <plugins>-->
<!--        <plugin>-->
<!--          <artifactId>maven-clean-plugin</artifactId>-->
<!--          <version>3.1.0</version>-->
<!--        </plugin>-->
<!--        &lt;!&ndash; see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging &ndash;&gt;-->
<!--        <plugin>-->
<!--          <artifactId>maven-resources-plugin</artifactId>-->
<!--          <version>3.0.2</version>-->
<!--        </plugin>-->
<!--        <plugin>-->
<!--          <artifactId>maven-compiler-plugin</artifactId>-->
<!--          <version>3.8.0</version>-->
<!--        </plugin>-->
<!--        <plugin>-->
<!--          <artifactId>maven-surefire-plugin</artifactId>-->
<!--          <version>2.22.1</version>-->
<!--        </plugin>-->
<!--        <plugin>-->
<!--          <artifactId>maven-war-plugin</artifactId>-->
<!--          <version>3.2.2</version>-->
<!--        </plugin>-->
<!--        <plugin>-->
<!--          <artifactId>maven-install-plugin</artifactId>-->
<!--          <version>2.5.2</version>-->
<!--        </plugin>-->
<!--        <plugin>-->
<!--          <artifactId>maven-deploy-plugin</artifactId>-->
<!--          <version>2.8.2</version>-->
<!--        </plugin>-->
  <build>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <!-- Exclude an unnecessary file generated by the GWT compiler. -->
            <packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
          </configuration>
        </plugin>


        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>9.2.10.v20150310</version>

          <configuration>
            <scanIntervalSeconds>10</scanIntervalSeconds>
            <webApp>
              <contextPath>/</contextPath>
            </webApp>
            <stopKey/>
            <stopPort/>
          </configuration>

        </plugin>

<!--        <plugin>-->
<!--          <groupId>org.apache.tomcat.maven</groupId>-->
<!--          <artifactId>tomcat7-maven-plugin</artifactId>-->
<!--          <version>2.2</version>-->
<!--          <configuration>-->
<!--            <port>8888</port>-->
<!--            <path>/</path>-->
<!--          </configuration>-->
<!--        </plugin>-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>

<!--        <plugin>-->
<!--          <groupId>org.codehaus.cargo</groupId>-->
<!--          <artifactId>cargo-maven2-plugin</artifactId>-->
<!--          <version>1.0</version>-->
<!--          <configuration>-->
<!--            &lt;!&ndash; Container configuration &ndash;&gt;-->
<!--            <container>-->
<!--              <containerId>tomcat8x</containerId>-->
<!--            </container>-->
<!--            <configuration>-->
<!--              <type>installed</type>-->
<!--              <home>/root/Рабочий стол/apache-tomcat-8.5.47</home>-->
<!--            </configuration>-->
<!--          </configuration>-->
<!--        </plugin>-->

<!--        <plugin>-->
<!--          <groupId>org.codehaus.cargo</groupId>-->
<!--          <artifactId>cargo-maven2-plugin</artifactId>-->
<!--          <configuration>-->
<!--            <container>-->
<!--              <containerId>tomcat8x</containerId>-->
<!--              <artifactInstaller>-->
<!--                <groupId>org.apache.tomcat</groupId>-->
<!--                <artifactId>tomcat</artifactId>-->
<!--                <version>tomcat8x</version>-->
<!--              </artifactInstaller>-->
<!--            </container>-->
<!--            <configuration>-->
<!--              <type>standalone</type>-->
<!--              <home>-->
<!--                /root/Рабочий стол/apache-tomcat-8.5.47-->
<!--              </home>-->
<!--              <properties>-->
<!--                <cargo.servlet.port>8080</cargo.servlet.port>-->
<!--                <cargo.logging>high</cargo.logging>-->
<!--              </properties>-->
<!--            </configuration>-->
<!--            <deployables>-->
<!--              <deployable>-->
<!--                <groupId>${project.groupId}</groupId>-->
<!--                <artifactId>${project.artifactId}</artifactId>-->
<!--                <type>war</type>-->
<!--                <properties>-->
<!--                  <context>/myapp</context>-->
<!--                </properties>-->
<!--              </deployable>-->
<!--            </deployables>-->
<!--          </configuration>-->
<!--        </plugin>-->

<!--        <plugin>-->
<!--          <groupId>org.codehaus.cargo</groupId>-->
<!--          <artifactId>cargo-maven2-plugin</artifactId>-->
<!--          <version>1.1.3</version>-->
<!--          <configuration>-->
<!--            <wait>true</wait>-->
<!--            <container>-->
<!--              <containerId>tomcat8x</containerId>-->
<!--              <type>embedded</type>-->
<!--            </container>-->
<!--          <configuration>-->
<!--          <properties>-->
<!--            <cargo.servlet.port>8080</cargo.servlet.port>-->
<!--          </properties>-->
<!--        </configuration>-->
<!--        </configuration>-->
<!--        </plugin>-->

<!--        <plugin>-->
<!--          &lt;!&ndash; Cargo Group Id &ndash;&gt;-->
<!--          <groupId>org.codehaus.cargo</groupId>-->
<!--          &lt;!&ndash; Cargo's Artifact Id &ndash;&gt;-->
<!--          <artifactId>cargo-maven2-plugin</artifactId>-->
<!--          &lt;!&ndash; This the most important part of the setup &ndash;&gt;-->
<!--          <configuration>-->
<!--            &lt;!&ndash;-->
<!--                When Cargo starts the container, the following tag instructs it to-->
<!--                wait for you to kill the session with Crtl-C-->
<!--            &ndash;&gt;-->
<!--            <wait>true</wait>-->
<!--            &lt;!&ndash;-->
<!--                The following tag details the container you want to-->
<!--                deploy to.-->
<!--            &ndash;&gt;-->
<!--            <container>-->
<!--              &lt;!&ndash;-->
<!--                  Specifying "tomcat6x" is very important! This one tripped me up-->
<!--                  for quite a while. The issue is that instead of being an-->
<!--                  identifier for you, "tomcat6x" is an identifier for Cargo that-->
<!--                  you want to deploy your webapp in Tomcat 6.x. I had initially-->
<!--                  thought otherwise and hence just dropped the 'x', making it-->
<!--                  "tomcat6", but that never worked.-->
<!--              &ndash;&gt;-->
<!--              <containerId>tomcat8x</containerId>-->
<!--              &lt;!&ndash;-->
<!--                  Type == Installed means that you want to deploy to a container-->
<!--                  that's installed on your computer-->
<!--              &ndash;&gt;-->
<!--              <type>installed</type>-->
<!--              &lt;!&ndash; The home folder for your local Tomcat &ndash;&gt;-->
<!--              <home>/root/Рабочий стол/apache-tomcat-8.5.47</home>-->
<!--            </container>-->
<!--            <configuration>-->
<!--              &lt;!&ndash;-->
<!--                  This is another one that confused me for long. Its not enough to-->
<!--                  specify 'installed' in the container tag. You have to now specify-->
<!--                  another configuration with type == existing and re-issue the home-->
<!--                  path-->
<!--              &ndash;&gt;-->
<!--              <type>existing</type>-->
<!--              <home>/root/Рабочий стол/apache-tomcat-8.5.47</home>-->
<!--            </configuration>-->
<!--            &lt;!&ndash;-->
<!--                Cargo has the notion of a 'deployer' in which you specify-->
<!--                'deployables'-->
<!--            &ndash;&gt;-->
<!--            <deployer>-->
<!--              &lt;!&ndash; You have to again specify that the type for the deployer &ndash;&gt;-->
<!--              <type>installed</type>-->
<!--              <deployables>-->
<!--                &lt;!&ndash; This deployable specifies the webapp you want to deploy &ndash;&gt;-->
<!--                <deployable>-->
<!--                  <groupId>com.dpillay.oworld</groupId>-->
<!--                  <artifactId>oworld-webapp</artifactId>-->
<!--                  <type>war</type>-->
<!--                </deployable>-->
<!--              </deployables>-->
<!--            </deployer>-->
<!--          </configuration>-->
<!--          &lt;!&ndash;-->
<!--              Executions specify the targets that you want to run during build-->
<!--          &ndash;&gt;-->
<!--          <executions>-->
<!--            &lt;!&ndash;-->
<!--                Maven has the concept of a 'phase' which can be thought of a-->
<!--                collection of goals. Hence here we are specifying that during the-->
<!--                'install' phase first deploy the webapp to the container specific-->
<!--                folder and then start the container. Both 'deployer-deploy' and-->
<!--                'start' are cargo specific goals.-->
<!--            &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>verify-deploy</id>-->
<!--              <phase>install</phase>-->
<!--              <goals>-->
<!--                <goal>deployer-deploy</goal>-->
<!--                <goal>start</goal>-->
<!--              </goals>-->
<!--            </execution>-->
<!--            &lt;!&ndash;-->
<!--                Specifying that during the 'pre-clean' phase, Cargo should first-->
<!--                stop the container.-->
<!--            &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>clean-undeploy</id>-->
<!--              <phase>pre-clean</phase>-->
<!--              <goals>-->
<!--                <goal>stop</goal>-->
<!--              </goals>-->
<!--            </execution>-->
<!--          </executions>-->
<!--        </plugin>-->


      </plugins>
<!--    </pluginManagement>-->
  </build>
</project>
